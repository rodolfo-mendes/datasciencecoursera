print('hello Data Scientist Toolbox')
x <- 1
x
print(x)
msg <- "hello"
msg
print(hello)
print(msg)
x <- 1:20
x
x <- c(1,10,59,3,5,6,4,8)
x
x(T,F,T,T,T,F,T)
y <- (T,F,T,T,T,F,T)
y <- c(T,F,T,T,T,F,T)
y
a <- 10
a.class
attributes(a)
y <- c(1.7, "a")
y
y <- c(TRUE,2)
y
x <- list(1, "a", TRUE, 1 + 4i)
x
m <- matrix(rows = 2, columns = 3)
m <- matrix(nrow = 2, ncol = 3)
m
attributes(m)
dim(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- matrix(1:6, nrow = 3, ncol = 2)
m
m <- 1:10
m
dim(m) <- c(2,5)
m
x <- 1:3
x
y <- 10:12
y
m <- rbind(x,y)
m
m <- cbind(x,y)
m
w <- factor(c("low","med","hig"))
w
levels(w)
table(w)
x <- data.frame(foo = 1:4 , bar = c(T,T,F,F))
x
y <- 1:3
y
names(y)
names(y) <- c("foo", "bar", "norf")
y
z <- 10
z
names(z)
names(z) <- "ernesto"
z
x
dput(x)
install.packages("swirl")
package_version("swirl")
packageVersion("swirl")
library("swirl")
ls
ls()
rm(list=lst())
rm(list=ls())
library("swirl")
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
args(dir.create)
dir.creat("testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename(from="mytest.R", to="mytest2.R")
file.copy(from="mytest2.R", to="mytest3.R")
file.path("mytest3.R")
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(1,20, by=0.5)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Rodolfo")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep=" ")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.fram(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
setwd("C:/Desenvolvimento/projetos/r_projects/datasciencecoursera/R_Programming/week2")
add2 <- function(x,y){
x + y
}
add2(3,4)
c
c <- 1
c
c(1,2,4)
y <- 10
f <- function(x){
y <- 2
y^2 + g(x)
}
g <- function(x){
x * y
}
f(3)
swirl()
package_version("swirl")
library("swirl")
ls()
rm(list=ls())
swirl()
TRUE == TRUE
(FALSE == TRUE) == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || C(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
int <- sample(10)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[0]}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste('Programming', 'is', 'fun!')
submit()
submit()
submit()
telegram('hello R')
submit()
mab_libs('Uberlandia', 'ligth', 'table')
mad_libs('Uberlandia', 'ligth', 'table')
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date('1969-01-01')
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > 1
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
x <- 1:10
if(x > 5){
x <- 0
}
f <- function(x){
g <- function(y){
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
wd()
read.csv('specdata/001.csv')
pollutants <- read.csv('specdata/001.csv')
labels(pollutants)
pollutants
pollutants[[!is.na('sulfate') && !is.na('nitrate')]]
pollutants[!is.na('sulfate') && !is.na('nitrate'),]
pollutants[!is.na('sulfate') && !is.na('nitrate')]
pollutants['sulfate']
a <- c(1,2,3,4)
class(a)
a <- c(1,2,3,5,7,11,13,17)
b < a[c(4,6)]
b <- a[c(4,6)]
class(b)
class(pollutants)
pollutants[['Date']]
class(pollutants[['Date']])
class(pollutants[['sulfate']])
pollutants['sulfate']
class(pollutants['sulfate'])
pollutants[,1:10]
pollutants[c('Date', 'sulfate', 'nitrate', 'ID'),1:10]
?data.frame
pollutants['Date', 'sulfate', 'nitrate', 'ID']
pollutants['Date']
pollutants[c('Date','sulfate')]
pollutants[c('Date','sulfate'), 1:10]
pollutants[c('Date','sulfate'), 1]
pollutants[1]
pollutants[1,2]
pollutants[,2]
pollutants[1:10,]
pollutants[,2]
pollutants[1:10,2]
is.na(pollutants['sulfate'])
!is.na(pollutants['sulfate'])
pollutants[!is.na(pollutants['sulfate'],)
]
pollutants[!is.na(pollutants['sulfate']),]
pollutants[['sulfate']]
class(pollutants[['sulfate']])
c()
c(1, c(3,4,5))
c(NULL, c(1,2,34))
source('pollutantmean.R')
pollutantmean('specdata', 'sulfute')
pollutantmean('specdata', 'sulfute')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfute')
warnings()
source('pollutantmean.R')
pollutantmean('specdata', 'sulfute')
print(pollutantmean('specdata', 'sulfute'))
source('pollutantmean.R')
print(pollutantmean('specdata', 'sulfute'))
source('pollutantmean.R')
print(pollutantmean('specdata', 'sulfute'))
print(pollutantmean('specdata', 'sulfate'))
source('pollutantmean.R')
print(pollutantmean('specdata', 'sulfate'))
source('pollutantmean.R')
print(pollutantmean('specdata', 'sulfate'))
source('pollutantmean.R')
print(pollutantmean('specdata', 'sulfate'))
source('pollutantmean.R')
print(pollutantmean('specdata', 'sulfate'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
source('complete.R')
print(complete('specdata'))
data.frame()
source('complete.R')
print(complete('specdata'))
